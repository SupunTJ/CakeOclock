@page "/"
@using Microsoft.EntityFrameworkCore
@using Tangy_DataAccess.Data
@inject ApplicationDbContext _context

<PageTitle>CakeO'Clock Server App</PageTitle>

<div class="background-container" style="background-image: url('images/patternxl1.png'); ">


    <div class="status" style="padding:20px">
        <ul>
            <li class="title-text">Welcome to Cake O' Admin!</li>
            <p class="date-time-text text-end">@DateTime.Now.ToString("MMMM dd, yyyy, hh:mm:ss tt")</p>


        </ul>

        <div class="box"></div>
        <ul>
            <li class="title-text">Pending Orders: @pendingCount</li>
            <li class="title-text">Confirmed Orders: @confirmedCount</li>
            <li class="title-text">Shipped Orders: @shippedCount</li>
            @* <li class="title-text">Received to Outlet Orders: @receivedCount</li> *@
            <li class="title-text">Cancelled Orders: @cancelledCount</li>
            <li class="title-text">Delivered Orders: @deliveredCount</li>
        </ul>
        <div class="box"></div>
        <div class="box"></div>
        <div class="box"></div>
        <div class="box"></div>
        <div class="box"></div>
        
        
    </div>

    <style>

        .status {
            padding: 100px 100px;
        }
        .title-text {
            font-size: 1.2em;
            font-weight: bold;
        }

        .date-time-text {
            font-size: 1em;
            color: gray;
        }

        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            margin-bottom: 10px;
        }

        .text-end {
            text-align: right;
        }
        .box {
            height:50px;
        }
    </style>

 


    </div>


@code {
    
    private DateTime currentDateTime;
    private string email = "";

    private int confirmedCount;
    private int pendingCount;
    private int cancelledCount;
    private int shippedCount;
    private int recivedCount;
    private int deliveredCount;

    protected override async Task OnInitializedAsync()
    {
        // Fetch the data from the database
        var orderHeaders = await _context.OrderHeaders.ToListAsync();

        // Calculate the counts
        confirmedCount = orderHeaders.Count(o => o.Status == "Confirmed");
        pendingCount = orderHeaders.Count(o => o.Status == "Pending");
        cancelledCount = orderHeaders.Count(o => o.Status == "Cancelled");
        shippedCount = orderHeaders.Count(o => o.Status == "Shipped");
        recivedCount = orderHeaders.Count(o => o.Status == "Recived");
        deliveredCount = orderHeaders.Count(o => o.Status == "Delivered");


    // public const string Status_Pending = "Pending";
    // public const string Status_Confirmed = "Confirmed";
    // public const string Status_Shipped = "Shipped";
    // public const string Status_Refunded = "Refunded";
    // public const string Status_Cancelled = "Cancelled";
    // public const string Status_Delivered = "Delivered";
    // public const string Status_Recived = "Recived";
    }
}



<style>





    .background-container {
        background-size: cover;
        background-position: center;
        height: auto; /* Set full height of viewport */
    }

    .photos-container {
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
        margin: 0 auto;
        max-width: 1000px;
    }

    .text-center {
        font-family: "Quicksand", sans-serif;
        font-size: 40px;
        margin-bottom: 30px;
        color: rgba(0, 0, 0, 0.8);
    }

    .photo-tile {
        flex: 0 0 calc(25% - 40px);
        margin: 10px;
        text-align: center;
    }

    .caption {
        margin-top: 10px;
        color: rgba(0, 0, 0, 0.8);
        font-family: "Quicksand", sans-serif;
    }

    .photo-tile img {
        width: 200px;
        height: auto;
        border-radius: 50%;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .title-text {
        padding-left:40px;
    }
    

    .date-text {
        font-size: 1.2em;
        color: #555;
        margin-bottom: 20px;
    }


    .row {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

</style>