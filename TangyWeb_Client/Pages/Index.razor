@page "/"
@inject IProductService _productService

@inject NavigationManager _navigationManager

@using Syncfusion.Blazor.Navigations

<SfMediaQuery MediaBreakpoints="@mediaQuery" @bind-ActiveBreakpoint="activeBreakpoint"></SfMediaQuery>

@* <b>Current Device Size is @activeBreakpoint</b> *@

@{
    string deviceSize = activeBreakpoint?.ToLowerInvariant() + "-device";

}

@if (IsProcessing)
{
    <div style="position:fixed;top:50%;left:50%;margin-top:-50px;margin-left:-100px;">
        <img src="images/ajax-loader.gif" />
    </div>
}
else
{

    
    <div class="background-container" style="background-image: url('images/bk.png');">
    <div class="control-container">

    <style>


    .control-container {
        background-color: transparent;
        margin: 0 auto;
        padding: 0 0; /* Add some padding to the sides */
    }

    .background-container {
        background-size: cover;
        background-position: center;
        height:auto; /* Set full height of viewport */
    }

    .box {
        background-color: transparent;
        height: 30px;
        margin: 0 auto;
        width: 50px;
    }
</style>


    <NavMenu />
    
    <div class="box"></div>

    <div class="image-container">
        <img src="images/wannamake2.png" alt="Image" style="width: 50%; min-width:200px; max-height: 150px; object-fit: cover;" />
    </div>

    <div class="vertical-space"></div>
    <div class="vertical-space"></div>


    <div class="button-container ">
    <a href="/CustomOrder">
        <button class="bake-button">Bake it</button>
    </a>
    </div>

    <style>
    .button-container {
        display: flex;
        justify-content: center;
        align-items: center;
        
          
    }

    .bake-button {
        background-color: whitesmoke; 
        border: none;
        color: rgba(0, 0, 0, 0.8);
        padding: 10px 15px;
        text-align: center; 
        text-decoration: none; 
        display: inline-block; 
        font-size: 16px;
        cursor: pointer; 
        border-radius: 10px; 
        font-family: "Quicksand", sans-serif;
    }

    .bake-button:hover {
        background-color: crimson; /* Darker green on hover */


    }

    .image-container {
        display: flex;
        justify-content: center;
       
    }
</style>






<Carousel />

<IndexCategories />         

<IndexTiles />
    


<div class="box"></div>
<div class="box"></div>

<SeasonsSpecial />

<div class="footer">

    <Footer /> 
</div>




</div>
</div>


}



<link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@300..700&family=Roboto&display=swap" rel="stylesheet">


<style>
    .vertical-space {
        height: 20px; /* Adjust height as needed */
    }
</style>


@code{
    private string? activeBreakpoint { get; set; }
    public bool IsProcessing { get; set; } = false;
     private List<MediaBreakpoint> mediaQuery { get; set; } = new List<MediaBreakpoint>()
    {
     new MediaBreakpoint() { Breakpoint = "Iphone", MediaQuery = "(max-width: 500px)" },
     new MediaBreakpoint() { Breakpoint = "Desktop", MediaQuery = "(min-width: 1400px)" },
     new MediaBreakpoint() { Breakpoint = "Ipad", MediaQuery = "(min-width: 900px)" },
     new MediaBreakpoint() { Breakpoint = "Tablet", MediaQuery = "(min-width: 500px)" }
    };



    protected override async Task OnInitializedAsync()
    {
        IsProcessing = true;
        
        IsProcessing = false;
    }
}


