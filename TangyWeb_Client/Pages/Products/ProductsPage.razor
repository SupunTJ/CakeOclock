@page "/ProductsPage"
@inject IProductService _productService

@if (IsProcessing)
{
    <div style="position: fixed; top: 50%; left: 50%; margin-top: -50px; margin-left: -100px;">
        <img src="images/ajax-loader.gif" alt="Loading..." />
    </div>
}
else
{
    <div class="background-container" style="background-image: url('images/bkkk.png');">

        <div class="qt-box qt-background">

            <NavMenu />

            <div class="vertical-space"></div>
            <div class="vertical-space"></div>
            <div class="vertical-space"></div>

            <div class="col-lg-12 col-md-6 text-center">
                <h1 class="makecake text-light mb-4">Make your cake with Cake O' Clock !</h1>
                <div class="vertical-space"></div>
                <a href="/CustomOrder" class="btn bake-button border-inner py-3 px-5">Order Now</a>
            </div>
        </div>


        }
        <style>

            .qt-background {
                background: url(images/Index/cake10_2.jpg) no-repeat;
                background-size: cover;
                padding-bottom: 220px;
                background-attachment: fixed;
                background-position: center center;
                position: relative;
            }

            .makecake {
                font-family: "Playwrite AU SA", cursive;
                font-optical-sizing: auto;
                font-weight: 500;
                font-style: normal;
                font-size: 50px;
                padding: 0 30%;
                text-shadow: 3px 3px 5px gray;
            }
        </style>


        <div class="background-container" style="background-image: url('images/bg-gold-4.png');">

            <div class="vertical-space"></div>

            <div class="container-fluid">
                @* <div class="image-container">
            <img src="images/wannamake2.png" alt="Image" style="width: 40%; max-height: 150px; object-fit: cover;" loading="lazy" />
            </div>

            <div class="vertical-space"></div>

            <div class="button-container">
            <a href="/CustomOrder">
            <button class="bake-button">Bake it</button>
            </a>
            </div> *@

                <div class="container-fluid">
                    <div class="row">
                        <div class="col-lg-3">
                            <div class="panel">
                                <div class="vertical-space"></div>
                                <div class="card-h3">
                                    <h3 @onclick="ShowAllProducts" class="h3">Categories</h3>
                                </div>
                                <ul class="category-list">
                                    @foreach (var category in Products.Select(u => u.Category.Name).Distinct())
                                    {
                                        <li class="@((selectedCategory == category) ? "selected" : "")" @onclick="@(async () => await CategoryClicked(category))">@category</li>
                                    }
                                </ul>
                            </div>
                        </div>
                        <div class="col-lg-9">
                            <div class="search-container">
                                <input type="text" placeholder="Search by product name" @bind="searchTerm" @onkeydown="@(async (e) => await SearchKeyDown(e))" />
                            </div>
                            @foreach (var productGroup in FilteredProducts.GroupBy(p => p.Category.Name))
                            {
                                <div class="card-h2">
                                    <h2 class="text-success pl-1" style="color:white  !important"><b>@productGroup.Key</b></h2>
                                </div>
                                <div class="row pb-3 pt-3">
                                    @foreach (var product in productGroup)
                                    {
                                        <div class="col-lg-4 col-md-6 pb-4 filter">
                                            <div class="image-tile" b-q2nmlbrzht="">
                                                <a href="/details/@product.Id">
                                                    <img src="@product.ImageUrl" alt="Product Image" b-q2nmlbrzht="">
                                                </a>
                                                <div class="availability-tag">
                                                    @if (@product.ShopFavourites == true)
                                                    {
                                                        <span class="badge badge-success">In Stock</span>
                                                    }
                                                    else if (@product.CustomerFavourites == true)
                                                    {
                                                        <span class="badge badge-warning">Out of Stock </span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Limited Stock</span>
                                                    }
                                                </div>
                                                <div class="description" b-q2nmlbrzht="">@product.Name</div>
                                                <div class="details" b-q2nmlbrzht="">
                                                    <div class="card-body p-1 px-3 row">
                                                        <div class="price">
                                                            @if (product.ProductPrices.OrderBy(u => u.Price).FirstOrDefault()?.Price.ToString("N2") == null)
                                                            {
                                                                <span class="text-info-d" style="color:black !important">
                                                                    You can Discuss the Price
                                                                </span>
                                                            }
                                                            else
                                                            {
                                                                <span class="text-info h4" style="color:black !important">
                                                                    Rs @product.ProductPrices.OrderBy(u => u.Price).FirstOrDefault()?.Price.ToString("N2")
                                                                </span>
                                                            }
                                                        </div>
                                                        <div class="col-6 cat-name">
                                                            <span class="badge p-2 border w-100">@product.Category.Name</span>
                                                        </div>
                                                        <div class="col-6 border-0">
                                                            <span class="badge p-2 border w-100">@product.Color</span>
                                                        </div>
                                                        <div class="col-12 p-1" style="text-align: center;">
                                                            <a href="/details/@product.Id" class="btn fav form-control btn-sm p-2" style="height: 40px;">View Details</a>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
                
            </div>
            
        </div>
        <Footer />
    </div>
}

<link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@300..700&family=Roboto&display=swap" rel="stylesheet">
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@300..700&family=Roboto&family=Signika+Negative:wght@300..700&display=swap" rel="stylesheet">

<link href="https://fonts.googleapis.com/css2?family=Playwrite+AU+SA:wght@100..400&display=swap" rel="stylesheet">


<style>

    .description {
        font-family: "Quicksand", sans-serif;
        font-size: 20px;
        font-weight: 500;
    }

    .image-tile:hover img {
        transform: scale(1.2); /* Adjust the scale value as needed */
    }



    .image-tile {
        position: relative;
    }

    .availability-tag {
        position: absolute;
        top: 10px;
        left: 10px;
        z-index: 10;
        background-color: white;
        padding: 5px;
        border-radius: 5px;
    }

    .image-tile:hover img {
        transform: scale(1.2); /* Adjust the scale value as needed */
    }

    .badge-success {
        background-color: green;
        color: white;
    }

    .badge-warning {
        background-color: orange;
        color: white;
    }

    .badge-danger {
        background-color: red;
        color: white;
    }
</style>